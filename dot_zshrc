# Set up fzf key bindings and fuzzy completion
source <(fzf --zsh)
# Open in tmux popup if on tmux, otherwise use --height mode
export FZF_DEFAULT_OPTS='--height 40% --tmux bottom,40% --layout reverse --border top'

# Do not record an event starting with a space.
setopt HIST_IGNORE_SPACE

alias fzfp="fzf --preview 'bat --style=numbers --color=always --line-range :500 {}'"

vterm_printf(){
    if [ -n "$TMUX" ]; then
        # Tell tmux to pass the escape sequences through
        # (Source: http://permalink.gmane.org/gmane.comp.terminal-emulators.tmux.user/1324)
        printf "\ePtmux;\e\e]%s\007\e\\" "$1"
    elif [ "${TERM%%-*}" = "screen" ]; then
        # GNU screen (screen, screen-256color, screen-256color-bce)
        printf "\eP\e]%s\007\e\\" "$1"
    else
        printf "\e]%s\e\\" "$1"
    fi
}

 if [[ "$INSIDE_EMACS" = 'vterm' ]]; then
     alias clear='vterm_printf "51;Evterm-clear-scrollback";tput clear'
 fi


vterm_prompt_end() {
    vterm_printf "51;A$(whoami)@$(hostname):$(pwd)";
}

# needed to make dir tracking work in Emacs/vterm.
precmd_functions+=(vterm_prompt_end)

export EDITOR=/Applications/Emacs.app//Contents/MacOS/bin/emacsclient

# hunspell dictionary
export DICPATH=$HOME/Library/Spelling/dict-en
export DICTIONARY="en_GB,en_US"

# ls (and other's?) will display output in colour
export CLICOLOR=1


## stuff to get git status into the prompt - from https://salferrarello.com/zsh-git-status-prompt/
# Autoload zsh add-zsh-hook and vcs_info functions (-U autoload w/o substition, -z use zsh style)
autoload -Uz add-zsh-hook vcs_info
# Enable substitution in the prompt.
setopt prompt_subst
# Run vcs_info just before a prompt is displayed (precmd)
add-zsh-hook precmd vcs_info

# below deprecated in favour of spaceship prompt.
# add ${vcs_info_msg_0} to the prompt
# e.g. here we add the Git information in red  
#PROMPT='%1~ %F{red}${vcs_info_msg_0_}%f %# '

source "/opt/homebrew/opt/spaceship/spaceship.zsh"

# Now you can list installed prompts with prompt -p. This will give you# the theme name and an example of what it looks like rendered.
#
# Select the theme you want with prompt $THEME.
autoload -Uz promptinit; promptinit

# Enable checking for (un)staged changes, enabling use of %u and %c
zstyle ':vcs_info:*' check-for-changes true
# Set custom strings for an unstaged vcs repo changes (*) and staged changes (+)
zstyle ':vcs_info:*' unstagedstr ' *'
zstyle ':vcs_info:*' stagedstr ' +'
# Set the format of the Git information for vcs_info
zstyle ':vcs_info:git:*' formats       '(%b%u%c)'
zstyle ':vcs_info:git:*' actionformats '(%b|%a%u%c)'
## end stuff to get git status into the prompt

# the magic that makes site funcions work. See
# /opt/homebrew/share/zsh/site-functions for a list of site functions
# installed by homebrew.
autoload -Uz compinit
compinit

eval "$(uv --generate-shell-completion zsh)"
eval "$(uvx --generate-shell-completion zsh)"

#interactive git diff - this is the shit!
function fshow() {
  git log --graph --color=always \
      --format="%C(auto)%h%d %s %C(black)%C(bold)%cr" "$@" \
  | fzf --ansi --preview "echo {} \
    | grep -o '[a-f0-9]\{7\}' \
    | head -1 \
    | xargs -I % sh -c 'git show --color=always %'" \
        --bind "enter:execute:
            (grep -o '[a-f0-9]\{7\}' \
                | head -1 \
                | xargs -I % sh -c 'git show --color=always % \
                | less -R') << 'FZF-EOF'
            {}
FZF-EOF"
}


source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh

source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

source /Users/cbenson/Library/Application\ Support/org.dystroy.broot/launcher/bash/br
